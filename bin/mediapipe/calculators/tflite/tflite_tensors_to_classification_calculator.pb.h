// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mediapipe/calculators/tflite/tflite_tensors_to_classification_calculator.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_mediapipe_2fcalculators_2ftflite_2ftflite_5ftensors_5fto_5fclassification_5fcalculator_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_mediapipe_2fcalculators_2ftflite_2ftflite_5ftensors_5fto_5fclassification_5fcalculator_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "mediapipe/framework/calculator.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_mediapipe_2fcalculators_2ftflite_2ftflite_5ftensors_5fto_5fclassification_5fcalculator_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_mediapipe_2fcalculators_2ftflite_2ftflite_5ftensors_5fto_5fclassification_5fcalculator_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mediapipe_2fcalculators_2ftflite_2ftflite_5ftensors_5fto_5fclassification_5fcalculator_2eproto;
namespace mediapipe {
class TfLiteTensorsToClassificationCalculatorOptions;
class TfLiteTensorsToClassificationCalculatorOptionsDefaultTypeInternal;
extern TfLiteTensorsToClassificationCalculatorOptionsDefaultTypeInternal _TfLiteTensorsToClassificationCalculatorOptions_default_instance_;
}  // namespace mediapipe
PROTOBUF_NAMESPACE_OPEN
template<> ::mediapipe::TfLiteTensorsToClassificationCalculatorOptions* Arena::CreateMaybeMessage<::mediapipe::TfLiteTensorsToClassificationCalculatorOptions>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace mediapipe {

// ===================================================================

class TfLiteTensorsToClassificationCalculatorOptions :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mediapipe.TfLiteTensorsToClassificationCalculatorOptions) */ {
 public:
  TfLiteTensorsToClassificationCalculatorOptions();
  virtual ~TfLiteTensorsToClassificationCalculatorOptions();

  TfLiteTensorsToClassificationCalculatorOptions(const TfLiteTensorsToClassificationCalculatorOptions& from);
  TfLiteTensorsToClassificationCalculatorOptions(TfLiteTensorsToClassificationCalculatorOptions&& from) noexcept
    : TfLiteTensorsToClassificationCalculatorOptions() {
    *this = ::std::move(from);
  }

  inline TfLiteTensorsToClassificationCalculatorOptions& operator=(const TfLiteTensorsToClassificationCalculatorOptions& from) {
    CopyFrom(from);
    return *this;
  }
  inline TfLiteTensorsToClassificationCalculatorOptions& operator=(TfLiteTensorsToClassificationCalculatorOptions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TfLiteTensorsToClassificationCalculatorOptions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TfLiteTensorsToClassificationCalculatorOptions* internal_default_instance() {
    return reinterpret_cast<const TfLiteTensorsToClassificationCalculatorOptions*>(
               &_TfLiteTensorsToClassificationCalculatorOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(TfLiteTensorsToClassificationCalculatorOptions& a, TfLiteTensorsToClassificationCalculatorOptions& b) {
    a.Swap(&b);
  }
  inline void Swap(TfLiteTensorsToClassificationCalculatorOptions* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TfLiteTensorsToClassificationCalculatorOptions* New() const final {
    return CreateMaybeMessage<TfLiteTensorsToClassificationCalculatorOptions>(nullptr);
  }

  TfLiteTensorsToClassificationCalculatorOptions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TfLiteTensorsToClassificationCalculatorOptions>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TfLiteTensorsToClassificationCalculatorOptions& from);
  void MergeFrom(const TfLiteTensorsToClassificationCalculatorOptions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TfLiteTensorsToClassificationCalculatorOptions* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mediapipe.TfLiteTensorsToClassificationCalculatorOptions";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_mediapipe_2fcalculators_2ftflite_2ftflite_5ftensors_5fto_5fclassification_5fcalculator_2eproto);
    return ::descriptor_table_mediapipe_2fcalculators_2ftflite_2ftflite_5ftensors_5fto_5fclassification_5fcalculator_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLabelMapPathFieldNumber = 3,
    kMinScoreThresholdFieldNumber = 1,
    kTopKFieldNumber = 2,
    kBinaryClassificationFieldNumber = 4,
  };
  // optional string label_map_path = 3;
  bool has_label_map_path() const;
  private:
  bool _internal_has_label_map_path() const;
  public:
  void clear_label_map_path();
  const std::string& label_map_path() const;
  void set_label_map_path(const std::string& value);
  void set_label_map_path(std::string&& value);
  void set_label_map_path(const char* value);
  void set_label_map_path(const char* value, size_t size);
  std::string* mutable_label_map_path();
  std::string* release_label_map_path();
  void set_allocated_label_map_path(std::string* label_map_path);
  private:
  const std::string& _internal_label_map_path() const;
  void _internal_set_label_map_path(const std::string& value);
  std::string* _internal_mutable_label_map_path();
  public:

  // optional float min_score_threshold = 1;
  bool has_min_score_threshold() const;
  private:
  bool _internal_has_min_score_threshold() const;
  public:
  void clear_min_score_threshold();
  float min_score_threshold() const;
  void set_min_score_threshold(float value);
  private:
  float _internal_min_score_threshold() const;
  void _internal_set_min_score_threshold(float value);
  public:

  // optional int32 top_k = 2;
  bool has_top_k() const;
  private:
  bool _internal_has_top_k() const;
  public:
  void clear_top_k();
  ::PROTOBUF_NAMESPACE_ID::int32 top_k() const;
  void set_top_k(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_top_k() const;
  void _internal_set_top_k(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool binary_classification = 4;
  bool has_binary_classification() const;
  private:
  bool _internal_has_binary_classification() const;
  public:
  void clear_binary_classification();
  bool binary_classification() const;
  void set_binary_classification(bool value);
  private:
  bool _internal_binary_classification() const;
  void _internal_set_binary_classification(bool value);
  public:

  static const int kExtFieldNumber = 266399463;
  static ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::mediapipe::CalculatorOptions,
      ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::mediapipe::TfLiteTensorsToClassificationCalculatorOptions >, 11, false >
    ext;
  // @@protoc_insertion_point(class_scope:mediapipe.TfLiteTensorsToClassificationCalculatorOptions)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr label_map_path_;
  float min_score_threshold_;
  ::PROTOBUF_NAMESPACE_ID::int32 top_k_;
  bool binary_classification_;
  friend struct ::TableStruct_mediapipe_2fcalculators_2ftflite_2ftflite_5ftensors_5fto_5fclassification_5fcalculator_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TfLiteTensorsToClassificationCalculatorOptions

// optional float min_score_threshold = 1;
inline bool TfLiteTensorsToClassificationCalculatorOptions::_internal_has_min_score_threshold() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TfLiteTensorsToClassificationCalculatorOptions::has_min_score_threshold() const {
  return _internal_has_min_score_threshold();
}
inline void TfLiteTensorsToClassificationCalculatorOptions::clear_min_score_threshold() {
  min_score_threshold_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float TfLiteTensorsToClassificationCalculatorOptions::_internal_min_score_threshold() const {
  return min_score_threshold_;
}
inline float TfLiteTensorsToClassificationCalculatorOptions::min_score_threshold() const {
  // @@protoc_insertion_point(field_get:mediapipe.TfLiteTensorsToClassificationCalculatorOptions.min_score_threshold)
  return _internal_min_score_threshold();
}
inline void TfLiteTensorsToClassificationCalculatorOptions::_internal_set_min_score_threshold(float value) {
  _has_bits_[0] |= 0x00000002u;
  min_score_threshold_ = value;
}
inline void TfLiteTensorsToClassificationCalculatorOptions::set_min_score_threshold(float value) {
  _internal_set_min_score_threshold(value);
  // @@protoc_insertion_point(field_set:mediapipe.TfLiteTensorsToClassificationCalculatorOptions.min_score_threshold)
}

// optional int32 top_k = 2;
inline bool TfLiteTensorsToClassificationCalculatorOptions::_internal_has_top_k() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool TfLiteTensorsToClassificationCalculatorOptions::has_top_k() const {
  return _internal_has_top_k();
}
inline void TfLiteTensorsToClassificationCalculatorOptions::clear_top_k() {
  top_k_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TfLiteTensorsToClassificationCalculatorOptions::_internal_top_k() const {
  return top_k_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TfLiteTensorsToClassificationCalculatorOptions::top_k() const {
  // @@protoc_insertion_point(field_get:mediapipe.TfLiteTensorsToClassificationCalculatorOptions.top_k)
  return _internal_top_k();
}
inline void TfLiteTensorsToClassificationCalculatorOptions::_internal_set_top_k(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  top_k_ = value;
}
inline void TfLiteTensorsToClassificationCalculatorOptions::set_top_k(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_top_k(value);
  // @@protoc_insertion_point(field_set:mediapipe.TfLiteTensorsToClassificationCalculatorOptions.top_k)
}

// optional string label_map_path = 3;
inline bool TfLiteTensorsToClassificationCalculatorOptions::_internal_has_label_map_path() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TfLiteTensorsToClassificationCalculatorOptions::has_label_map_path() const {
  return _internal_has_label_map_path();
}
inline void TfLiteTensorsToClassificationCalculatorOptions::clear_label_map_path() {
  label_map_path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& TfLiteTensorsToClassificationCalculatorOptions::label_map_path() const {
  // @@protoc_insertion_point(field_get:mediapipe.TfLiteTensorsToClassificationCalculatorOptions.label_map_path)
  return _internal_label_map_path();
}
inline void TfLiteTensorsToClassificationCalculatorOptions::set_label_map_path(const std::string& value) {
  _internal_set_label_map_path(value);
  // @@protoc_insertion_point(field_set:mediapipe.TfLiteTensorsToClassificationCalculatorOptions.label_map_path)
}
inline std::string* TfLiteTensorsToClassificationCalculatorOptions::mutable_label_map_path() {
  // @@protoc_insertion_point(field_mutable:mediapipe.TfLiteTensorsToClassificationCalculatorOptions.label_map_path)
  return _internal_mutable_label_map_path();
}
inline const std::string& TfLiteTensorsToClassificationCalculatorOptions::_internal_label_map_path() const {
  return label_map_path_.GetNoArena();
}
inline void TfLiteTensorsToClassificationCalculatorOptions::_internal_set_label_map_path(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  label_map_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void TfLiteTensorsToClassificationCalculatorOptions::set_label_map_path(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  label_map_path_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mediapipe.TfLiteTensorsToClassificationCalculatorOptions.label_map_path)
}
inline void TfLiteTensorsToClassificationCalculatorOptions::set_label_map_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  label_map_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mediapipe.TfLiteTensorsToClassificationCalculatorOptions.label_map_path)
}
inline void TfLiteTensorsToClassificationCalculatorOptions::set_label_map_path(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  label_map_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mediapipe.TfLiteTensorsToClassificationCalculatorOptions.label_map_path)
}
inline std::string* TfLiteTensorsToClassificationCalculatorOptions::_internal_mutable_label_map_path() {
  _has_bits_[0] |= 0x00000001u;
  return label_map_path_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* TfLiteTensorsToClassificationCalculatorOptions::release_label_map_path() {
  // @@protoc_insertion_point(field_release:mediapipe.TfLiteTensorsToClassificationCalculatorOptions.label_map_path)
  if (!_internal_has_label_map_path()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return label_map_path_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void TfLiteTensorsToClassificationCalculatorOptions::set_allocated_label_map_path(std::string* label_map_path) {
  if (label_map_path != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  label_map_path_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), label_map_path);
  // @@protoc_insertion_point(field_set_allocated:mediapipe.TfLiteTensorsToClassificationCalculatorOptions.label_map_path)
}

// optional bool binary_classification = 4;
inline bool TfLiteTensorsToClassificationCalculatorOptions::_internal_has_binary_classification() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool TfLiteTensorsToClassificationCalculatorOptions::has_binary_classification() const {
  return _internal_has_binary_classification();
}
inline void TfLiteTensorsToClassificationCalculatorOptions::clear_binary_classification() {
  binary_classification_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool TfLiteTensorsToClassificationCalculatorOptions::_internal_binary_classification() const {
  return binary_classification_;
}
inline bool TfLiteTensorsToClassificationCalculatorOptions::binary_classification() const {
  // @@protoc_insertion_point(field_get:mediapipe.TfLiteTensorsToClassificationCalculatorOptions.binary_classification)
  return _internal_binary_classification();
}
inline void TfLiteTensorsToClassificationCalculatorOptions::_internal_set_binary_classification(bool value) {
  _has_bits_[0] |= 0x00000008u;
  binary_classification_ = value;
}
inline void TfLiteTensorsToClassificationCalculatorOptions::set_binary_classification(bool value) {
  _internal_set_binary_classification(value);
  // @@protoc_insertion_point(field_set:mediapipe.TfLiteTensorsToClassificationCalculatorOptions.binary_classification)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace mediapipe

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_mediapipe_2fcalculators_2ftflite_2ftflite_5ftensors_5fto_5fclassification_5fcalculator_2eproto
