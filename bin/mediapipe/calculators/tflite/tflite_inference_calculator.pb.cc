// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mediapipe/calculators/tflite/tflite_inference_calculator.proto

#include "mediapipe/calculators/tflite/tflite_inference_calculator.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TfLiteInferenceCalculatorOptions_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_TfLiteInferenceCalculatorOptions_Delegate_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TfLiteInferenceCalculatorOptions_Delegate_Gpu_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TfLiteInferenceCalculatorOptions_Delegate_Nnapi_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TfLiteInferenceCalculatorOptions_Delegate_TfLite_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TfLiteInferenceCalculatorOptions_Delegate_Xnnpack_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto;
namespace mediapipe {
class TfLiteInferenceCalculatorOptions_Delegate_TfLiteDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TfLiteInferenceCalculatorOptions_Delegate_TfLite> _instance;
} _TfLiteInferenceCalculatorOptions_Delegate_TfLite_default_instance_;
class TfLiteInferenceCalculatorOptions_Delegate_GpuDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TfLiteInferenceCalculatorOptions_Delegate_Gpu> _instance;
} _TfLiteInferenceCalculatorOptions_Delegate_Gpu_default_instance_;
class TfLiteInferenceCalculatorOptions_Delegate_NnapiDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TfLiteInferenceCalculatorOptions_Delegate_Nnapi> _instance;
} _TfLiteInferenceCalculatorOptions_Delegate_Nnapi_default_instance_;
class TfLiteInferenceCalculatorOptions_Delegate_XnnpackDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TfLiteInferenceCalculatorOptions_Delegate_Xnnpack> _instance;
} _TfLiteInferenceCalculatorOptions_Delegate_Xnnpack_default_instance_;
class TfLiteInferenceCalculatorOptions_DelegateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TfLiteInferenceCalculatorOptions_Delegate> _instance;
  const ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_TfLite* tflite_;
  const ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Gpu* gpu_;
  const ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Nnapi* nnapi_;
  const ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Xnnpack* xnnpack_;
} _TfLiteInferenceCalculatorOptions_Delegate_default_instance_;
class TfLiteInferenceCalculatorOptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TfLiteInferenceCalculatorOptions> _instance;
} _TfLiteInferenceCalculatorOptions_default_instance_;
}  // namespace mediapipe
static void InitDefaultsscc_info_TfLiteInferenceCalculatorOptions_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mediapipe::_TfLiteInferenceCalculatorOptions_default_instance_;
    new (ptr) ::mediapipe::TfLiteInferenceCalculatorOptions();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mediapipe::TfLiteInferenceCalculatorOptions::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TfLiteInferenceCalculatorOptions_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TfLiteInferenceCalculatorOptions_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto}, {
      &scc_info_TfLiteInferenceCalculatorOptions_Delegate_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto.base,}};

static void InitDefaultsscc_info_TfLiteInferenceCalculatorOptions_Delegate_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mediapipe::_TfLiteInferenceCalculatorOptions_Delegate_default_instance_;
    new (ptr) ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_TfLiteInferenceCalculatorOptions_Delegate_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_TfLiteInferenceCalculatorOptions_Delegate_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto}, {
      &scc_info_TfLiteInferenceCalculatorOptions_Delegate_TfLite_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto.base,
      &scc_info_TfLiteInferenceCalculatorOptions_Delegate_Gpu_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto.base,
      &scc_info_TfLiteInferenceCalculatorOptions_Delegate_Nnapi_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto.base,
      &scc_info_TfLiteInferenceCalculatorOptions_Delegate_Xnnpack_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto.base,}};

static void InitDefaultsscc_info_TfLiteInferenceCalculatorOptions_Delegate_Gpu_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mediapipe::_TfLiteInferenceCalculatorOptions_Delegate_Gpu_default_instance_;
    new (ptr) ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Gpu();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Gpu::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TfLiteInferenceCalculatorOptions_Delegate_Gpu_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TfLiteInferenceCalculatorOptions_Delegate_Gpu_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto}, {}};

static void InitDefaultsscc_info_TfLiteInferenceCalculatorOptions_Delegate_Nnapi_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mediapipe::_TfLiteInferenceCalculatorOptions_Delegate_Nnapi_default_instance_;
    new (ptr) ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Nnapi();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Nnapi::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TfLiteInferenceCalculatorOptions_Delegate_Nnapi_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TfLiteInferenceCalculatorOptions_Delegate_Nnapi_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto}, {}};

static void InitDefaultsscc_info_TfLiteInferenceCalculatorOptions_Delegate_TfLite_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mediapipe::_TfLiteInferenceCalculatorOptions_Delegate_TfLite_default_instance_;
    new (ptr) ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_TfLite();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_TfLite::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TfLiteInferenceCalculatorOptions_Delegate_TfLite_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TfLiteInferenceCalculatorOptions_Delegate_TfLite_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto}, {}};

static void InitDefaultsscc_info_TfLiteInferenceCalculatorOptions_Delegate_Xnnpack_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mediapipe::_TfLiteInferenceCalculatorOptions_Delegate_Xnnpack_default_instance_;
    new (ptr) ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Xnnpack();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Xnnpack::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TfLiteInferenceCalculatorOptions_Delegate_Xnnpack_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TfLiteInferenceCalculatorOptions_Delegate_Xnnpack_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_TfLite, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_TfLite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Gpu, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Gpu, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Gpu, use_advanced_gpu_api_),
  0,
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Nnapi, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Nnapi, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Xnnpack, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Xnnpack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Xnnpack, num_threads_),
  0,
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteInferenceCalculatorOptions_Delegate, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteInferenceCalculatorOptions_Delegate, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteInferenceCalculatorOptions_Delegate, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::mediapipe::TfLiteInferenceCalculatorOptions_DelegateDefaultTypeInternal, tflite_),
  offsetof(::mediapipe::TfLiteInferenceCalculatorOptions_DelegateDefaultTypeInternal, gpu_),
  offsetof(::mediapipe::TfLiteInferenceCalculatorOptions_DelegateDefaultTypeInternal, nnapi_),
  offsetof(::mediapipe::TfLiteInferenceCalculatorOptions_DelegateDefaultTypeInternal, xnnpack_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteInferenceCalculatorOptions_Delegate, delegate_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteInferenceCalculatorOptions, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteInferenceCalculatorOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteInferenceCalculatorOptions, model_path_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteInferenceCalculatorOptions, use_gpu_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteInferenceCalculatorOptions, use_nnapi_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteInferenceCalculatorOptions, cpu_num_thread_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteInferenceCalculatorOptions, delegate_),
  0,
  2,
  3,
  4,
  1,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 5, sizeof(::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_TfLite)},
  { 5, 11, sizeof(::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Gpu)},
  { 12, 17, sizeof(::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Nnapi)},
  { 17, 23, sizeof(::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Xnnpack)},
  { 24, 34, sizeof(::mediapipe::TfLiteInferenceCalculatorOptions_Delegate)},
  { 38, 48, sizeof(::mediapipe::TfLiteInferenceCalculatorOptions)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mediapipe::_TfLiteInferenceCalculatorOptions_Delegate_TfLite_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mediapipe::_TfLiteInferenceCalculatorOptions_Delegate_Gpu_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mediapipe::_TfLiteInferenceCalculatorOptions_Delegate_Nnapi_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mediapipe::_TfLiteInferenceCalculatorOptions_Delegate_Xnnpack_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mediapipe::_TfLiteInferenceCalculatorOptions_Delegate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mediapipe::_TfLiteInferenceCalculatorOptions_default_instance_),
};

const char descriptor_table_protodef_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n>mediapipe/calculators/tflite/tflite_in"
  "ference_calculator.proto\022\tmediapipe\032$med"
  "iapipe/framework/calculator.proto\"\341\005\n Tf"
  "LiteInferenceCalculatorOptions\022\022\n\nmodel_"
  "path\030\001 \001(\t\022\032\n\007use_gpu\030\002 \001(\010:\005falseB\002\030\001\022\034"
  "\n\tuse_nnapi\030\003 \001(\010:\005falseB\002\030\001\022\032\n\016cpu_num_"
  "thread\030\004 \001(\005:\002-1\022F\n\010delegate\030\005 \001(\01324.med"
  "iapipe.TfLiteInferenceCalculatorOptions."
  "Delegate\032\257\003\n\010Delegate\022M\n\006tflite\030\001 \001(\0132;."
  "mediapipe.TfLiteInferenceCalculatorOptio"
  "ns.Delegate.TfLiteH\000\022G\n\003gpu\030\002 \001(\01328.medi"
  "apipe.TfLiteInferenceCalculatorOptions.D"
  "elegate.GpuH\000\022K\n\005nnapi\030\003 \001(\0132:.mediapipe"
  ".TfLiteInferenceCalculatorOptions.Delega"
  "te.NnapiH\000\022O\n\007xnnpack\030\004 \001(\0132<.mediapipe."
  "TfLiteInferenceCalculatorOptions.Delegat"
  "e.XnnpackH\000\032\010\n\006TfLite\032*\n\003Gpu\022#\n\024use_adva"
  "nced_gpu_api\030\001 \001(\010:\005false\032\007\n\005Nnapi\032\"\n\007Xn"
  "npack\022\027\n\013num_threads\030\001 \001(\005:\002-1B\n\n\010delega"
  "te2Y\n\003ext\022\034.mediapipe.CalculatorOptions\030"
  "\315\217\302o \001(\0132+.mediapipe.TfLiteInferenceCalc"
  "ulatorOptions"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto_deps[1] = {
  &::descriptor_table_mediapipe_2fframework_2fcalculator_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto_sccs[6] = {
  &scc_info_TfLiteInferenceCalculatorOptions_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto.base,
  &scc_info_TfLiteInferenceCalculatorOptions_Delegate_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto.base,
  &scc_info_TfLiteInferenceCalculatorOptions_Delegate_Gpu_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto.base,
  &scc_info_TfLiteInferenceCalculatorOptions_Delegate_Nnapi_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto.base,
  &scc_info_TfLiteInferenceCalculatorOptions_Delegate_TfLite_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto.base,
  &scc_info_TfLiteInferenceCalculatorOptions_Delegate_Xnnpack_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto_once;
static bool descriptor_table_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto = {
  &descriptor_table_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto_initialized, descriptor_table_protodef_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto, "mediapipe/calculators/tflite/tflite_inference_calculator.proto", 853,
  &descriptor_table_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto_once, descriptor_table_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto_sccs, descriptor_table_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto_deps, 6, 1,
  schemas, file_default_instances, TableStruct_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto::offsets,
  file_level_metadata_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto, 6, file_level_enum_descriptors_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto, file_level_service_descriptors_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto), true);
namespace mediapipe {

// ===================================================================

void TfLiteInferenceCalculatorOptions_Delegate_TfLite::InitAsDefaultInstance() {
}
class TfLiteInferenceCalculatorOptions_Delegate_TfLite::_Internal {
 public:
  using HasBits = decltype(std::declval<TfLiteInferenceCalculatorOptions_Delegate_TfLite>()._has_bits_);
};

TfLiteInferenceCalculatorOptions_Delegate_TfLite::TfLiteInferenceCalculatorOptions_Delegate_TfLite()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.TfLite)
}
TfLiteInferenceCalculatorOptions_Delegate_TfLite::TfLiteInferenceCalculatorOptions_Delegate_TfLite(const TfLiteInferenceCalculatorOptions_Delegate_TfLite& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.TfLite)
}

void TfLiteInferenceCalculatorOptions_Delegate_TfLite::SharedCtor() {
}

TfLiteInferenceCalculatorOptions_Delegate_TfLite::~TfLiteInferenceCalculatorOptions_Delegate_TfLite() {
  // @@protoc_insertion_point(destructor:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.TfLite)
  SharedDtor();
}

void TfLiteInferenceCalculatorOptions_Delegate_TfLite::SharedDtor() {
}

void TfLiteInferenceCalculatorOptions_Delegate_TfLite::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TfLiteInferenceCalculatorOptions_Delegate_TfLite& TfLiteInferenceCalculatorOptions_Delegate_TfLite::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TfLiteInferenceCalculatorOptions_Delegate_TfLite_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto.base);
  return *internal_default_instance();
}


void TfLiteInferenceCalculatorOptions_Delegate_TfLite::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.TfLite)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* TfLiteInferenceCalculatorOptions_Delegate_TfLite::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TfLiteInferenceCalculatorOptions_Delegate_TfLite::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.TfLite)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.TfLite)
  return target;
}

size_t TfLiteInferenceCalculatorOptions_Delegate_TfLite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.TfLite)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TfLiteInferenceCalculatorOptions_Delegate_TfLite::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.TfLite)
  GOOGLE_DCHECK_NE(&from, this);
  const TfLiteInferenceCalculatorOptions_Delegate_TfLite* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TfLiteInferenceCalculatorOptions_Delegate_TfLite>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.TfLite)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.TfLite)
    MergeFrom(*source);
  }
}

void TfLiteInferenceCalculatorOptions_Delegate_TfLite::MergeFrom(const TfLiteInferenceCalculatorOptions_Delegate_TfLite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.TfLite)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TfLiteInferenceCalculatorOptions_Delegate_TfLite::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.TfLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TfLiteInferenceCalculatorOptions_Delegate_TfLite::CopyFrom(const TfLiteInferenceCalculatorOptions_Delegate_TfLite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.TfLite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TfLiteInferenceCalculatorOptions_Delegate_TfLite::IsInitialized() const {
  return true;
}

void TfLiteInferenceCalculatorOptions_Delegate_TfLite::InternalSwap(TfLiteInferenceCalculatorOptions_Delegate_TfLite* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata TfLiteInferenceCalculatorOptions_Delegate_TfLite::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TfLiteInferenceCalculatorOptions_Delegate_Gpu::InitAsDefaultInstance() {
}
class TfLiteInferenceCalculatorOptions_Delegate_Gpu::_Internal {
 public:
  using HasBits = decltype(std::declval<TfLiteInferenceCalculatorOptions_Delegate_Gpu>()._has_bits_);
  static void set_has_use_advanced_gpu_api(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TfLiteInferenceCalculatorOptions_Delegate_Gpu::TfLiteInferenceCalculatorOptions_Delegate_Gpu()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Gpu)
}
TfLiteInferenceCalculatorOptions_Delegate_Gpu::TfLiteInferenceCalculatorOptions_Delegate_Gpu(const TfLiteInferenceCalculatorOptions_Delegate_Gpu& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  use_advanced_gpu_api_ = from.use_advanced_gpu_api_;
  // @@protoc_insertion_point(copy_constructor:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Gpu)
}

void TfLiteInferenceCalculatorOptions_Delegate_Gpu::SharedCtor() {
  use_advanced_gpu_api_ = false;
}

TfLiteInferenceCalculatorOptions_Delegate_Gpu::~TfLiteInferenceCalculatorOptions_Delegate_Gpu() {
  // @@protoc_insertion_point(destructor:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Gpu)
  SharedDtor();
}

void TfLiteInferenceCalculatorOptions_Delegate_Gpu::SharedDtor() {
}

void TfLiteInferenceCalculatorOptions_Delegate_Gpu::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TfLiteInferenceCalculatorOptions_Delegate_Gpu& TfLiteInferenceCalculatorOptions_Delegate_Gpu::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TfLiteInferenceCalculatorOptions_Delegate_Gpu_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto.base);
  return *internal_default_instance();
}


void TfLiteInferenceCalculatorOptions_Delegate_Gpu::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Gpu)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  use_advanced_gpu_api_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* TfLiteInferenceCalculatorOptions_Delegate_Gpu::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bool use_advanced_gpu_api = 1 [default = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_use_advanced_gpu_api(&has_bits);
          use_advanced_gpu_api_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TfLiteInferenceCalculatorOptions_Delegate_Gpu::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Gpu)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool use_advanced_gpu_api = 1 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_use_advanced_gpu_api(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Gpu)
  return target;
}

size_t TfLiteInferenceCalculatorOptions_Delegate_Gpu::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Gpu)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool use_advanced_gpu_api = 1 [default = false];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TfLiteInferenceCalculatorOptions_Delegate_Gpu::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Gpu)
  GOOGLE_DCHECK_NE(&from, this);
  const TfLiteInferenceCalculatorOptions_Delegate_Gpu* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TfLiteInferenceCalculatorOptions_Delegate_Gpu>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Gpu)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Gpu)
    MergeFrom(*source);
  }
}

void TfLiteInferenceCalculatorOptions_Delegate_Gpu::MergeFrom(const TfLiteInferenceCalculatorOptions_Delegate_Gpu& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Gpu)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_use_advanced_gpu_api()) {
    _internal_set_use_advanced_gpu_api(from._internal_use_advanced_gpu_api());
  }
}

void TfLiteInferenceCalculatorOptions_Delegate_Gpu::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Gpu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TfLiteInferenceCalculatorOptions_Delegate_Gpu::CopyFrom(const TfLiteInferenceCalculatorOptions_Delegate_Gpu& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Gpu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TfLiteInferenceCalculatorOptions_Delegate_Gpu::IsInitialized() const {
  return true;
}

void TfLiteInferenceCalculatorOptions_Delegate_Gpu::InternalSwap(TfLiteInferenceCalculatorOptions_Delegate_Gpu* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(use_advanced_gpu_api_, other->use_advanced_gpu_api_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TfLiteInferenceCalculatorOptions_Delegate_Gpu::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TfLiteInferenceCalculatorOptions_Delegate_Nnapi::InitAsDefaultInstance() {
}
class TfLiteInferenceCalculatorOptions_Delegate_Nnapi::_Internal {
 public:
  using HasBits = decltype(std::declval<TfLiteInferenceCalculatorOptions_Delegate_Nnapi>()._has_bits_);
};

TfLiteInferenceCalculatorOptions_Delegate_Nnapi::TfLiteInferenceCalculatorOptions_Delegate_Nnapi()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Nnapi)
}
TfLiteInferenceCalculatorOptions_Delegate_Nnapi::TfLiteInferenceCalculatorOptions_Delegate_Nnapi(const TfLiteInferenceCalculatorOptions_Delegate_Nnapi& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Nnapi)
}

void TfLiteInferenceCalculatorOptions_Delegate_Nnapi::SharedCtor() {
}

TfLiteInferenceCalculatorOptions_Delegate_Nnapi::~TfLiteInferenceCalculatorOptions_Delegate_Nnapi() {
  // @@protoc_insertion_point(destructor:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Nnapi)
  SharedDtor();
}

void TfLiteInferenceCalculatorOptions_Delegate_Nnapi::SharedDtor() {
}

void TfLiteInferenceCalculatorOptions_Delegate_Nnapi::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TfLiteInferenceCalculatorOptions_Delegate_Nnapi& TfLiteInferenceCalculatorOptions_Delegate_Nnapi::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TfLiteInferenceCalculatorOptions_Delegate_Nnapi_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto.base);
  return *internal_default_instance();
}


void TfLiteInferenceCalculatorOptions_Delegate_Nnapi::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Nnapi)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* TfLiteInferenceCalculatorOptions_Delegate_Nnapi::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TfLiteInferenceCalculatorOptions_Delegate_Nnapi::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Nnapi)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Nnapi)
  return target;
}

size_t TfLiteInferenceCalculatorOptions_Delegate_Nnapi::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Nnapi)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TfLiteInferenceCalculatorOptions_Delegate_Nnapi::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Nnapi)
  GOOGLE_DCHECK_NE(&from, this);
  const TfLiteInferenceCalculatorOptions_Delegate_Nnapi* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TfLiteInferenceCalculatorOptions_Delegate_Nnapi>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Nnapi)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Nnapi)
    MergeFrom(*source);
  }
}

void TfLiteInferenceCalculatorOptions_Delegate_Nnapi::MergeFrom(const TfLiteInferenceCalculatorOptions_Delegate_Nnapi& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Nnapi)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TfLiteInferenceCalculatorOptions_Delegate_Nnapi::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Nnapi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TfLiteInferenceCalculatorOptions_Delegate_Nnapi::CopyFrom(const TfLiteInferenceCalculatorOptions_Delegate_Nnapi& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Nnapi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TfLiteInferenceCalculatorOptions_Delegate_Nnapi::IsInitialized() const {
  return true;
}

void TfLiteInferenceCalculatorOptions_Delegate_Nnapi::InternalSwap(TfLiteInferenceCalculatorOptions_Delegate_Nnapi* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata TfLiteInferenceCalculatorOptions_Delegate_Nnapi::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TfLiteInferenceCalculatorOptions_Delegate_Xnnpack::InitAsDefaultInstance() {
}
class TfLiteInferenceCalculatorOptions_Delegate_Xnnpack::_Internal {
 public:
  using HasBits = decltype(std::declval<TfLiteInferenceCalculatorOptions_Delegate_Xnnpack>()._has_bits_);
  static void set_has_num_threads(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TfLiteInferenceCalculatorOptions_Delegate_Xnnpack::TfLiteInferenceCalculatorOptions_Delegate_Xnnpack()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Xnnpack)
}
TfLiteInferenceCalculatorOptions_Delegate_Xnnpack::TfLiteInferenceCalculatorOptions_Delegate_Xnnpack(const TfLiteInferenceCalculatorOptions_Delegate_Xnnpack& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  num_threads_ = from.num_threads_;
  // @@protoc_insertion_point(copy_constructor:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Xnnpack)
}

void TfLiteInferenceCalculatorOptions_Delegate_Xnnpack::SharedCtor() {
  num_threads_ = -1;
}

TfLiteInferenceCalculatorOptions_Delegate_Xnnpack::~TfLiteInferenceCalculatorOptions_Delegate_Xnnpack() {
  // @@protoc_insertion_point(destructor:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Xnnpack)
  SharedDtor();
}

void TfLiteInferenceCalculatorOptions_Delegate_Xnnpack::SharedDtor() {
}

void TfLiteInferenceCalculatorOptions_Delegate_Xnnpack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TfLiteInferenceCalculatorOptions_Delegate_Xnnpack& TfLiteInferenceCalculatorOptions_Delegate_Xnnpack::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TfLiteInferenceCalculatorOptions_Delegate_Xnnpack_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto.base);
  return *internal_default_instance();
}


void TfLiteInferenceCalculatorOptions_Delegate_Xnnpack::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Xnnpack)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  num_threads_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* TfLiteInferenceCalculatorOptions_Delegate_Xnnpack::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 num_threads = 1 [default = -1];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_num_threads(&has_bits);
          num_threads_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TfLiteInferenceCalculatorOptions_Delegate_Xnnpack::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Xnnpack)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 num_threads = 1 [default = -1];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_num_threads(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Xnnpack)
  return target;
}

size_t TfLiteInferenceCalculatorOptions_Delegate_Xnnpack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Xnnpack)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 num_threads = 1 [default = -1];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num_threads());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TfLiteInferenceCalculatorOptions_Delegate_Xnnpack::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Xnnpack)
  GOOGLE_DCHECK_NE(&from, this);
  const TfLiteInferenceCalculatorOptions_Delegate_Xnnpack* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TfLiteInferenceCalculatorOptions_Delegate_Xnnpack>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Xnnpack)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Xnnpack)
    MergeFrom(*source);
  }
}

void TfLiteInferenceCalculatorOptions_Delegate_Xnnpack::MergeFrom(const TfLiteInferenceCalculatorOptions_Delegate_Xnnpack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Xnnpack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_num_threads()) {
    _internal_set_num_threads(from._internal_num_threads());
  }
}

void TfLiteInferenceCalculatorOptions_Delegate_Xnnpack::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Xnnpack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TfLiteInferenceCalculatorOptions_Delegate_Xnnpack::CopyFrom(const TfLiteInferenceCalculatorOptions_Delegate_Xnnpack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Xnnpack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TfLiteInferenceCalculatorOptions_Delegate_Xnnpack::IsInitialized() const {
  return true;
}

void TfLiteInferenceCalculatorOptions_Delegate_Xnnpack::InternalSwap(TfLiteInferenceCalculatorOptions_Delegate_Xnnpack* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(num_threads_, other->num_threads_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TfLiteInferenceCalculatorOptions_Delegate_Xnnpack::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TfLiteInferenceCalculatorOptions_Delegate::InitAsDefaultInstance() {
  ::mediapipe::_TfLiteInferenceCalculatorOptions_Delegate_default_instance_.tflite_ = const_cast< ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_TfLite*>(
      ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_TfLite::internal_default_instance());
  ::mediapipe::_TfLiteInferenceCalculatorOptions_Delegate_default_instance_.gpu_ = const_cast< ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Gpu*>(
      ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Gpu::internal_default_instance());
  ::mediapipe::_TfLiteInferenceCalculatorOptions_Delegate_default_instance_.nnapi_ = const_cast< ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Nnapi*>(
      ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Nnapi::internal_default_instance());
  ::mediapipe::_TfLiteInferenceCalculatorOptions_Delegate_default_instance_.xnnpack_ = const_cast< ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Xnnpack*>(
      ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Xnnpack::internal_default_instance());
}
class TfLiteInferenceCalculatorOptions_Delegate::_Internal {
 public:
  using HasBits = decltype(std::declval<TfLiteInferenceCalculatorOptions_Delegate>()._has_bits_);
  static const ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_TfLite& tflite(const TfLiteInferenceCalculatorOptions_Delegate* msg);
  static const ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Gpu& gpu(const TfLiteInferenceCalculatorOptions_Delegate* msg);
  static const ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Nnapi& nnapi(const TfLiteInferenceCalculatorOptions_Delegate* msg);
  static const ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Xnnpack& xnnpack(const TfLiteInferenceCalculatorOptions_Delegate* msg);
};

const ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_TfLite&
TfLiteInferenceCalculatorOptions_Delegate::_Internal::tflite(const TfLiteInferenceCalculatorOptions_Delegate* msg) {
  return *msg->delegate_.tflite_;
}
const ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Gpu&
TfLiteInferenceCalculatorOptions_Delegate::_Internal::gpu(const TfLiteInferenceCalculatorOptions_Delegate* msg) {
  return *msg->delegate_.gpu_;
}
const ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Nnapi&
TfLiteInferenceCalculatorOptions_Delegate::_Internal::nnapi(const TfLiteInferenceCalculatorOptions_Delegate* msg) {
  return *msg->delegate_.nnapi_;
}
const ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Xnnpack&
TfLiteInferenceCalculatorOptions_Delegate::_Internal::xnnpack(const TfLiteInferenceCalculatorOptions_Delegate* msg) {
  return *msg->delegate_.xnnpack_;
}
void TfLiteInferenceCalculatorOptions_Delegate::set_allocated_tflite(::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_TfLite* tflite) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_delegate();
  if (tflite) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      tflite = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, tflite, submessage_arena);
    }
    set_has_tflite();
    delegate_.tflite_ = tflite;
  }
  // @@protoc_insertion_point(field_set_allocated:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.tflite)
}
void TfLiteInferenceCalculatorOptions_Delegate::set_allocated_gpu(::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Gpu* gpu) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_delegate();
  if (gpu) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      gpu = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, gpu, submessage_arena);
    }
    set_has_gpu();
    delegate_.gpu_ = gpu;
  }
  // @@protoc_insertion_point(field_set_allocated:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.gpu)
}
void TfLiteInferenceCalculatorOptions_Delegate::set_allocated_nnapi(::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Nnapi* nnapi) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_delegate();
  if (nnapi) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      nnapi = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, nnapi, submessage_arena);
    }
    set_has_nnapi();
    delegate_.nnapi_ = nnapi;
  }
  // @@protoc_insertion_point(field_set_allocated:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.nnapi)
}
void TfLiteInferenceCalculatorOptions_Delegate::set_allocated_xnnpack(::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Xnnpack* xnnpack) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_delegate();
  if (xnnpack) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      xnnpack = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, xnnpack, submessage_arena);
    }
    set_has_xnnpack();
    delegate_.xnnpack_ = xnnpack;
  }
  // @@protoc_insertion_point(field_set_allocated:mediapipe.TfLiteInferenceCalculatorOptions.Delegate.xnnpack)
}
TfLiteInferenceCalculatorOptions_Delegate::TfLiteInferenceCalculatorOptions_Delegate()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mediapipe.TfLiteInferenceCalculatorOptions.Delegate)
}
TfLiteInferenceCalculatorOptions_Delegate::TfLiteInferenceCalculatorOptions_Delegate(const TfLiteInferenceCalculatorOptions_Delegate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_delegate();
  switch (from.delegate_case()) {
    case kTflite: {
      _internal_mutable_tflite()->::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_TfLite::MergeFrom(from._internal_tflite());
      break;
    }
    case kGpu: {
      _internal_mutable_gpu()->::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Gpu::MergeFrom(from._internal_gpu());
      break;
    }
    case kNnapi: {
      _internal_mutable_nnapi()->::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Nnapi::MergeFrom(from._internal_nnapi());
      break;
    }
    case kXnnpack: {
      _internal_mutable_xnnpack()->::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Xnnpack::MergeFrom(from._internal_xnnpack());
      break;
    }
    case DELEGATE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:mediapipe.TfLiteInferenceCalculatorOptions.Delegate)
}

void TfLiteInferenceCalculatorOptions_Delegate::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TfLiteInferenceCalculatorOptions_Delegate_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto.base);
  clear_has_delegate();
}

TfLiteInferenceCalculatorOptions_Delegate::~TfLiteInferenceCalculatorOptions_Delegate() {
  // @@protoc_insertion_point(destructor:mediapipe.TfLiteInferenceCalculatorOptions.Delegate)
  SharedDtor();
}

void TfLiteInferenceCalculatorOptions_Delegate::SharedDtor() {
  if (has_delegate()) {
    clear_delegate();
  }
}

void TfLiteInferenceCalculatorOptions_Delegate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TfLiteInferenceCalculatorOptions_Delegate& TfLiteInferenceCalculatorOptions_Delegate::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TfLiteInferenceCalculatorOptions_Delegate_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto.base);
  return *internal_default_instance();
}


void TfLiteInferenceCalculatorOptions_Delegate::clear_delegate() {
// @@protoc_insertion_point(one_of_clear_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate)
  switch (delegate_case()) {
    case kTflite: {
      delete delegate_.tflite_;
      break;
    }
    case kGpu: {
      delete delegate_.gpu_;
      break;
    }
    case kNnapi: {
      delete delegate_.nnapi_;
      break;
    }
    case kXnnpack: {
      delete delegate_.xnnpack_;
      break;
    }
    case DELEGATE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DELEGATE_NOT_SET;
}


void TfLiteInferenceCalculatorOptions_Delegate::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_delegate();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* TfLiteInferenceCalculatorOptions_Delegate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .mediapipe.TfLiteInferenceCalculatorOptions.Delegate.TfLite tflite = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_tflite(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Gpu gpu = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_gpu(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Nnapi nnapi = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_nnapi(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Xnnpack xnnpack = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_xnnpack(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TfLiteInferenceCalculatorOptions_Delegate::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (delegate_case()) {
    case kTflite: {
      target = stream->EnsureSpace(target);
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(
          1, _Internal::tflite(this), target, stream);
      break;
    }
    case kGpu: {
      target = stream->EnsureSpace(target);
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(
          2, _Internal::gpu(this), target, stream);
      break;
    }
    case kNnapi: {
      target = stream->EnsureSpace(target);
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(
          3, _Internal::nnapi(this), target, stream);
      break;
    }
    case kXnnpack: {
      target = stream->EnsureSpace(target);
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(
          4, _Internal::xnnpack(this), target, stream);
      break;
    }
    default: ;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mediapipe.TfLiteInferenceCalculatorOptions.Delegate)
  return target;
}

size_t TfLiteInferenceCalculatorOptions_Delegate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (delegate_case()) {
    // optional .mediapipe.TfLiteInferenceCalculatorOptions.Delegate.TfLite tflite = 1;
    case kTflite: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *delegate_.tflite_);
      break;
    }
    // optional .mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Gpu gpu = 2;
    case kGpu: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *delegate_.gpu_);
      break;
    }
    // optional .mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Nnapi nnapi = 3;
    case kNnapi: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *delegate_.nnapi_);
      break;
    }
    // optional .mediapipe.TfLiteInferenceCalculatorOptions.Delegate.Xnnpack xnnpack = 4;
    case kXnnpack: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *delegate_.xnnpack_);
      break;
    }
    case DELEGATE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TfLiteInferenceCalculatorOptions_Delegate::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate)
  GOOGLE_DCHECK_NE(&from, this);
  const TfLiteInferenceCalculatorOptions_Delegate* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TfLiteInferenceCalculatorOptions_Delegate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mediapipe.TfLiteInferenceCalculatorOptions.Delegate)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mediapipe.TfLiteInferenceCalculatorOptions.Delegate)
    MergeFrom(*source);
  }
}

void TfLiteInferenceCalculatorOptions_Delegate::MergeFrom(const TfLiteInferenceCalculatorOptions_Delegate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.delegate_case()) {
    case kTflite: {
      _internal_mutable_tflite()->::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_TfLite::MergeFrom(from._internal_tflite());
      break;
    }
    case kGpu: {
      _internal_mutable_gpu()->::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Gpu::MergeFrom(from._internal_gpu());
      break;
    }
    case kNnapi: {
      _internal_mutable_nnapi()->::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Nnapi::MergeFrom(from._internal_nnapi());
      break;
    }
    case kXnnpack: {
      _internal_mutable_xnnpack()->::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Xnnpack::MergeFrom(from._internal_xnnpack());
      break;
    }
    case DELEGATE_NOT_SET: {
      break;
    }
  }
}

void TfLiteInferenceCalculatorOptions_Delegate::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TfLiteInferenceCalculatorOptions_Delegate::CopyFrom(const TfLiteInferenceCalculatorOptions_Delegate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.TfLiteInferenceCalculatorOptions.Delegate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TfLiteInferenceCalculatorOptions_Delegate::IsInitialized() const {
  return true;
}

void TfLiteInferenceCalculatorOptions_Delegate::InternalSwap(TfLiteInferenceCalculatorOptions_Delegate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(delegate_, other->delegate_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata TfLiteInferenceCalculatorOptions_Delegate::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TfLiteInferenceCalculatorOptions::InitAsDefaultInstance() {
  ::mediapipe::_TfLiteInferenceCalculatorOptions_default_instance_._instance.get_mutable()->delegate_ = const_cast< ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate*>(
      ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate::internal_default_instance());
}
class TfLiteInferenceCalculatorOptions::_Internal {
 public:
  using HasBits = decltype(std::declval<TfLiteInferenceCalculatorOptions>()._has_bits_);
  static void set_has_model_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_use_gpu(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_use_nnapi(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_cpu_num_thread(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate& delegate(const TfLiteInferenceCalculatorOptions* msg);
  static void set_has_delegate(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate&
TfLiteInferenceCalculatorOptions::_Internal::delegate(const TfLiteInferenceCalculatorOptions* msg) {
  return *msg->delegate_;
}
TfLiteInferenceCalculatorOptions::TfLiteInferenceCalculatorOptions()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mediapipe.TfLiteInferenceCalculatorOptions)
}
TfLiteInferenceCalculatorOptions::TfLiteInferenceCalculatorOptions(const TfLiteInferenceCalculatorOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  model_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_model_path()) {
    model_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.model_path_);
  }
  if (from._internal_has_delegate()) {
    delegate_ = new ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate(*from.delegate_);
  } else {
    delegate_ = nullptr;
  }
  ::memcpy(&use_gpu_, &from.use_gpu_,
    static_cast<size_t>(reinterpret_cast<char*>(&cpu_num_thread_) -
    reinterpret_cast<char*>(&use_gpu_)) + sizeof(cpu_num_thread_));
  // @@protoc_insertion_point(copy_constructor:mediapipe.TfLiteInferenceCalculatorOptions)
}

void TfLiteInferenceCalculatorOptions::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TfLiteInferenceCalculatorOptions_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto.base);
  model_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&delegate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_nnapi_) -
      reinterpret_cast<char*>(&delegate_)) + sizeof(use_nnapi_));
  cpu_num_thread_ = -1;
}

TfLiteInferenceCalculatorOptions::~TfLiteInferenceCalculatorOptions() {
  // @@protoc_insertion_point(destructor:mediapipe.TfLiteInferenceCalculatorOptions)
  SharedDtor();
}

void TfLiteInferenceCalculatorOptions::SharedDtor() {
  model_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete delegate_;
}

void TfLiteInferenceCalculatorOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TfLiteInferenceCalculatorOptions& TfLiteInferenceCalculatorOptions::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TfLiteInferenceCalculatorOptions_mediapipe_2fcalculators_2ftflite_2ftflite_5finference_5fcalculator_2eproto.base);
  return *internal_default_instance();
}


void TfLiteInferenceCalculatorOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.TfLiteInferenceCalculatorOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      model_path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(delegate_ != nullptr);
      delegate_->Clear();
    }
  }
  ::memset(&use_gpu_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_nnapi_) -
      reinterpret_cast<char*>(&use_gpu_)) + sizeof(use_nnapi_));
  cpu_num_thread_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* TfLiteInferenceCalculatorOptions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string model_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_model_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mediapipe.TfLiteInferenceCalculatorOptions.model_path");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool use_gpu = 2 [default = false, deprecated = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_use_gpu(&has_bits);
          use_gpu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool use_nnapi = 3 [default = false, deprecated = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_use_nnapi(&has_bits);
          use_nnapi_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 cpu_num_thread = 4 [default = -1];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_cpu_num_thread(&has_bits);
          cpu_num_thread_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .mediapipe.TfLiteInferenceCalculatorOptions.Delegate delegate = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_delegate(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TfLiteInferenceCalculatorOptions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mediapipe.TfLiteInferenceCalculatorOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string model_path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_model_path().data(), static_cast<int>(this->_internal_model_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "mediapipe.TfLiteInferenceCalculatorOptions.model_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_model_path(), target);
  }

  // optional bool use_gpu = 2 [default = false, deprecated = true];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_use_gpu(), target);
  }

  // optional bool use_nnapi = 3 [default = false, deprecated = true];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_use_nnapi(), target);
  }

  // optional int32 cpu_num_thread = 4 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_cpu_num_thread(), target);
  }

  // optional .mediapipe.TfLiteInferenceCalculatorOptions.Delegate delegate = 5;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::delegate(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mediapipe.TfLiteInferenceCalculatorOptions)
  return target;
}

size_t TfLiteInferenceCalculatorOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mediapipe.TfLiteInferenceCalculatorOptions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string model_path = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_model_path());
    }

    // optional .mediapipe.TfLiteInferenceCalculatorOptions.Delegate delegate = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *delegate_);
    }

    // optional bool use_gpu = 2 [default = false, deprecated = true];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional bool use_nnapi = 3 [default = false, deprecated = true];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional int32 cpu_num_thread = 4 [default = -1];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_cpu_num_thread());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TfLiteInferenceCalculatorOptions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mediapipe.TfLiteInferenceCalculatorOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const TfLiteInferenceCalculatorOptions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TfLiteInferenceCalculatorOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mediapipe.TfLiteInferenceCalculatorOptions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mediapipe.TfLiteInferenceCalculatorOptions)
    MergeFrom(*source);
  }
}

void TfLiteInferenceCalculatorOptions::MergeFrom(const TfLiteInferenceCalculatorOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.TfLiteInferenceCalculatorOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      model_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.model_path_);
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_delegate()->::mediapipe::TfLiteInferenceCalculatorOptions_Delegate::MergeFrom(from._internal_delegate());
    }
    if (cached_has_bits & 0x00000004u) {
      use_gpu_ = from.use_gpu_;
    }
    if (cached_has_bits & 0x00000008u) {
      use_nnapi_ = from.use_nnapi_;
    }
    if (cached_has_bits & 0x00000010u) {
      cpu_num_thread_ = from.cpu_num_thread_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TfLiteInferenceCalculatorOptions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mediapipe.TfLiteInferenceCalculatorOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TfLiteInferenceCalculatorOptions::CopyFrom(const TfLiteInferenceCalculatorOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.TfLiteInferenceCalculatorOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TfLiteInferenceCalculatorOptions::IsInitialized() const {
  return true;
}

void TfLiteInferenceCalculatorOptions::InternalSwap(TfLiteInferenceCalculatorOptions* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  model_path_.Swap(&other->model_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(delegate_, other->delegate_);
  swap(use_gpu_, other->use_gpu_);
  swap(use_nnapi_, other->use_nnapi_);
  swap(cpu_num_thread_, other->cpu_num_thread_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TfLiteInferenceCalculatorOptions::GetMetadata() const {
  return GetMetadataStatic();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TfLiteInferenceCalculatorOptions::kExtFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::mediapipe::CalculatorOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::mediapipe::TfLiteInferenceCalculatorOptions >, 11, false >
  TfLiteInferenceCalculatorOptions::ext(kExtFieldNumber, *::mediapipe::TfLiteInferenceCalculatorOptions::internal_default_instance());

// @@protoc_insertion_point(namespace_scope)
}  // namespace mediapipe
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_TfLite* Arena::CreateMaybeMessage< ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_TfLite >(Arena* arena) {
  return Arena::CreateInternal< ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_TfLite >(arena);
}
template<> PROTOBUF_NOINLINE ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Gpu* Arena::CreateMaybeMessage< ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Gpu >(Arena* arena) {
  return Arena::CreateInternal< ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Gpu >(arena);
}
template<> PROTOBUF_NOINLINE ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Nnapi* Arena::CreateMaybeMessage< ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Nnapi >(Arena* arena) {
  return Arena::CreateInternal< ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Nnapi >(arena);
}
template<> PROTOBUF_NOINLINE ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Xnnpack* Arena::CreateMaybeMessage< ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Xnnpack >(Arena* arena) {
  return Arena::CreateInternal< ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate_Xnnpack >(arena);
}
template<> PROTOBUF_NOINLINE ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate* Arena::CreateMaybeMessage< ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate >(Arena* arena) {
  return Arena::CreateInternal< ::mediapipe::TfLiteInferenceCalculatorOptions_Delegate >(arena);
}
template<> PROTOBUF_NOINLINE ::mediapipe::TfLiteInferenceCalculatorOptions* Arena::CreateMaybeMessage< ::mediapipe::TfLiteInferenceCalculatorOptions >(Arena* arena) {
  return Arena::CreateInternal< ::mediapipe::TfLiteInferenceCalculatorOptions >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
